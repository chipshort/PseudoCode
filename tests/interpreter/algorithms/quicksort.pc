func quicksort(l,r)
    if l $\geq$ r then return; fi

    x <- A[l];
    i <- l + 1;
    j <- r;

    repeat
        while (i $\leq$ r) $\land$ A[i] < x do i++; od
        while (j > l) $\land$ A[j] $\geq$ x do j--; od

        if i < j then
            tmp <- A[i];
            A[i] <- A[j];
            A[j] <- tmp;
            i++;
            j--;
        fi
    until i > j;

    tmp <- A[l];
    A[l] <- A[j];
    A[j] <- tmp;

    quicksort(l, j-1);
    quicksort(j+1, r);
cnuf


n <- 10;
A[1..n];

for k = 1 to 50 do
    for i = 1 to n do
        A[i] <- $\lfloor$ random() * n $\rfloor$;
    od

    quicksort(1,n);

    for i = 1 to n-1 do
        if A[i] > A[i+1] then return false; fi
    od
od

return true;